version: '3.8'

services:
  product-service:
    build: .
    container_name: product-api-new
    ports:
      - "9014:9014"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-new:3306/productservice?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_REDIS_HOST=redis-new
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=Qwe123
      - SPRING_RABBITMQ_HOST=rabbitmq-new
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=admin
      - SPRING_RABBITMQ_PASSWORD=root
    depends_on:
      mysql-new:
        condition: service_healthy
      redis-new:
        condition: service_started
      rabbitmq-new:
        condition: service_started
    networks:
      - app-network

  mysql-new:
    image: mysql:latest
    container_name: mysqlserver1-new
    environment:
      MYSQL_DATABASE: productservice
      #      MYSQL_USER: root
      #      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_new:/var/lib/mysql
    #    user: "1000:1000"
    #    command: --default-authentication-plugin=mysql_native_password
    networks:
      - app-network

  redis-new:
    image: redis:8.2.1-alpine
    container_name: myredis-new
    ports:
      - "6379:6379"
    volumes:
      - redis_data_new:/data
    networks:
      - app-network

  rabbitmq-new:
    image: rabbitmq:4.0-management
    container_name: myrabbitmq-new
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: root
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data_new:/var/lib/rabbitmq
    networks:
      - app-network

volumes:
  mysql_data_new:
  redis_data_new:
  rabbitmq_data_new:

networks:
  app-network:
    driver: bridge